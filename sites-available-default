# Complete default site configuration with SSL and performance optimizations
# This will replace /etc/nginx/sites-available/default

# HTTP server block - redirects to HTTPS after SSL certificate is obtained
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    
    server_name SERVER_DOMAINS_PLACEHOLDER;
    
    # Redirect HTTP to HTTPS (will be enabled after SSL certificate is obtained)
    # return 301 https://$host$request_uri;
    
    # For initial setup, serve content directly
    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;
    
    location / {
        try_files $uri $uri/ =404;
    }
}

# HTTPS server block - main configuration
server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    
    # Basic server settings
    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;
    server_name SERVER_DOMAINS_PLACEHOLDER;
    
    # Connection limits
    limit_conn conn_limit_per_ip 20;
    limit_conn conn_limit_per_server 1000;
    
    # Static file caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        access_log off;
    }
    
    # Static files rate limiting
    location /static/ {
        limit_req zone=static burst=100 nodelay;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Default location
    location / {
        try_files $uri $uri/ =404;
    }
    
    # Deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    location ~ /\.ht {
        deny all;
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # SSL configuration placeholders - replace with actual paths after running certbot
    # ssl_certificate /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Backend proxy configuration (only if BACKEND_URL is set)
    # This will be replaced by the init script based on BACKEND_URL variable
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        proxy_pass BACKEND_URL_PLACEHOLDER;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /login {
        limit_req zone=login burst=5 nodelay;
        proxy_pass BACKEND_URL_PLACEHOLDER;
    }
}
